# Instructions
# -------------
# 1) To locally test the data that this mapping would generate without actually loading it into Salesforce, run the following command:
#    snowfakery datasets/snowfakery/quotes.yml --plugin-option org_name dev --output-format csv --output-folder datasets/snowfakery/quotes/csvfiles --target-number 10 SBQQ__Quote__c
# 2) To actually load this data into Salesforce, run the following command to create 50 sample quotes:
#    cci task run generate_and_load_from_yaml -o generator_yaml datasets/snowfakery/quotes.yml -o num_records 10 -o num_records_tablename SBQQ__Quote__c -o batch_size 25 --org misaelorg 
# 3) If there was a mistake and you need to quickly delete records from the org, do the following:
#    cci task run delete_data -o objects SBQQ__Quote__c,Account,Opportunity -o ignore_row_errors True --org dev
# Make sure to select the "Auto Create Standard Pricebook Entries" setting in the "Demo Org Settings" custom settings
- plugin: snowfakery.standard_plugins.Salesforce.SalesforceQuery

- macro: sharedProduct2Fields
  fields:
    IsActive: True
    SBQQ__AssetConversion__c: One per quote line
    blng__BillingRule__c: 
      SalesforceQuery.find_record:
          from: blng__BillingRule__c
          where: Name = 'Generate Invoice Billing Rule'
    blng__RevenueRecognitionRule__c:
      SalesforceQuery.find_record:
          from: blng__RevenueRecognitionRule__c
          where: Name = 'Revenue Recognition Rule'
    blng__TaxRule__c:
      SalesforceQuery.find_record:
          from: blng__TaxRule__c
          where: Name = 'Taxable Tax Rule'

- var: commercePricebook
  value: 
    SalesforceQuery.find_record:
      from: Pricebook2
      where: Name = 'Standard Price Book'

- object: Product2
  nickname: subscriptionProductRecurringCharge
  just_once: True
  include: sharedProduct2Fields
  fields:
    ProductCode: 
      fake.Bothify:
        text: '???###'
        letters: PODXYCL
    Name: ${{ProductCode}} - Subscription Product - Recurring Charge
    Description: Subscription product with recurring charge. Created automatically by Snowfakery recipe.
    SBQQ__BillingFrequency__c: Monthly
    SBQQ__BillingType__c: Advance
    SBQQ__ChargeType__c: Recurring
    SBQQ__PricingMethod__c: List
    SBQQ__SubscriptionPricing__c: Fixed Price
    SBQQ__SubscriptionTerm__c: 12
    SBQQ__SubscriptionType__c: Renewable
    __nickname: subscriptionProductRecurringCharge

- object: PricebookEntry
  nickname: subscriptionProductRecurringChargePBE
  just_once: True
  fields:
    IsActive: True
    Pricebook2Id: ${{commercePricebook}}
    Product2Id: 
      reference: subscriptionProductRecurringCharge
    UnitPrice: 100


- object: Product2
  nickname: subscriptionProductOneTimeCharge
  just_once: True
  include: sharedProduct2Fields
  fields:
    ProductCode: 
      fake.Bothify:
        text: '???###'
        letters: PODXYCL
    Name: ${{ProductCode}} - Subscription Product - TCV In Advance
    Description: Subscription product with one time charge. Created automatically by Snowfakery recipe.
    SBQQ__ChargeType__c: One-Time
    SBQQ__PricingMethod__c: List
    SBQQ__SubscriptionPricing__c: Fixed Price
    SBQQ__SubscriptionTerm__c: 12
    SBQQ__SubscriptionType__c: Renewable
    __nickname: subscriptionProductOneTimeCharge

- object: PricebookEntry
  nickname: subscriptionProductOneTimeChargePBE
  just_once: True
  fields:
    IsActive: True
    Pricebook2Id: ${{commercePricebook}}
    Product2Id: 
      reference: subscriptionProductOneTimeCharge
    UnitPrice: 2000

- object: Product2
  nickname: nonSubcriptionProduct
  just_once: True
  include: sharedProduct2Fields
  fields:
    ProductCode: 
      fake.Bothify:
        text: '???###'
        letters: PODXYCL
    Name: ${{ProductCode}} - Non Subscription Product
    Description: Non-subscription product with one time charge. Created automatically by Snowfakery recipe.
    SBQQ__ChargeType__c: One-Time
    SBQQ__PricingMethod__c: List
    __nickname: nonSubcriptionProduct

- object: PricebookEntry
  nickname: nonSubcriptionProductPBE
  just_once: True
  fields:
    IsActive: True
    Pricebook2Id: ${{commercePricebook}}
    Product2Id: 
      reference: nonSubcriptionProduct
    UnitPrice: 1000

- object: Account
  fields:
    Name:
      fake: Company
    Type:
      random_choice:
        - Prospect
        - Customer - Direct
        - Customer - Channel
        - Channel Partner / Reseller
        - Installation Partner
        - Technology Partner
        - Other
    BillingStreet:
      fake: StreetAddress
    BillingCity:
      fake: City
    BillingState:
      fake: State
    BillingPostalCode:
      fake: PostalCode
    BillingCountry:
      fake: CurrentCountry
    ShippingStreet: ${{BillingStreet}}
    ShippingCity: ${{BillingCity}}
    ShippingState: ${{BillingState}}
    ShippingPostalCode: ${{BillingPostalCode}}
    ShippingCountry: ${{BillingCountry}}
    Site: Single location
    Phone:
      fake.Bothify:
        text: '(###) ###-####'
    Fax:
      fake: phone_number
    AccountNumber:
      fake.text:
        max_nb_chars: 40

    Sic:
      fake: postalcode
    Industry:
      random_choice:
        - Agriculture
        - Apparel
        - Banking
        - Biotechnology
        - Chemicals
        - Communications
        - Construction
        - Consulting
        - Education
        - Electronics
        - Energy
        - Engineering
        - Entertainment
        - Environmental
        - Finance
        - Food & Beverage
        - Government
        - Healthcare
        - Hospitality
        - Insurance
        - Machinery
        - Manufacturing
        - Media
        - Not For Profit
        - Recreation
        - Retail
        - Shipping
        - Technology
        - Telecommunications
        - Transportation
        - Utilities
        - Other
    AnnualRevenue:
      random_number:
        min: 1
        max: 100000
    NumberOfEmployees:
      random_number:
        min: 1
        max: 100000
    Ownership:
      random_choice:
        - Public
        - Private
        - Subsidiary
        - Other
    Rating:
      random_choice:
        - Hot
        - Warm
        - Cold
    AccountSource:
      random_choice:
        - Web
        - Phone Inquiry
        - Partner Referral
        - Purchased List
        - Other
    YearStarted:
      fake: year
    SBQQ__ContractCoTermination__c: Always
    SBQQ__PreserveBundle__c: True
    SBQQ__RenewalPricingMethod__c: Uplift

- object: Opportunity
  fields:
    AccountId:
      reference: Account 
    Name: Test Opportunity
    Description: Sample record automatically created by Snowfakery recipe.
    CloseDate:
      date_between:
        start_date: 1m
        end_date: 3m
    StageName:
      random_choice:
        - Prospecting
        - Qualification
        - Needs Analysis
        - Value Proposition
        - Id. Decision Makers
        - Perception Analysis
        - Proposal/Price Quote
        - Negotiation/Review
    Pricebook2Id: ${{commercePricebook}}
    SBQQ__QuotePricebookId__c: ${{commercePricebook}}

- object: SBQQ__Quote__c
  fields:
    SBQQ__Account__c:
      reference: Account 
    SBQQ__Opportunity2__c:
      reference: Opportunity
    SBQQ__Primary__c: True 
    SBQQ__Status__c: Approved
    SBQQ__BillingCity__c: ${{SBQQ__Account__c.BillingCity}}
    SBQQ__BillingCountry__c: ${{SBQQ__Account__c.BillingCountry}}
    SBQQ__BillingName__c: 
      fake: name
    SBQQ__BillingPostalCode__c: ${{SBQQ__Account__c.BillingPostalCode}}
    SBQQ__BillingState__c: ${{SBQQ__Account__c.BillingState}}
    SBQQ__BillingStreet__c: ${{SBQQ__Account__c.BillingStreet}}
    SBQQ__ShippingCity__c: ${{SBQQ__Account__c.ShippingCity}}
    SBQQ__ShippingCountry__c: ${{SBQQ__Account__c.ShippingCountry}}
    SBQQ__ShippingName__c: ${{SBQQ__ShippingName__c}}
    SBQQ__ShippingPostalCode__c: ${{SBQQ__Account__c.ShippingPostalCode}}
    SBQQ__ShippingState__c: ${{SBQQ__Account__c.ShippingState}}
    SBQQ__ShippingStreet__c: ${{SBQQ__Account__c.ShippingStreet}}
    SBQQ__Notes__c: Sample record automatically created by Snowfakery recipe.
    SBQQ__PriceBook__c: ${{commercePricebook}}
    SBQQ__PricebookId__c: ${{commercePricebook}}
    SBQQ__StartDate__c: 
      random_choice:
          - choice:
              # About a quarter of the time, I would like to ensure the start date begins on a leap year
              probability: 25%
              pick:
                random_choice:
                  - choice:
                      probability: 25%
                      pick:
                        date_between:
                          start_date: 2024-01-01
                          end_date: 2024-12-31
                  - choice:
                      probability: 25%
                      pick:
                        date_between:
                          start_date: 2024-02-01
                          end_date: 2024-02-29
                  - choice:
                      probability: 25%
                      pick:
                        date_between:
                          start_date: 2028-01-01
                          end_date: 2028-12-31
                  - choice:
                      probability: 25%
                      pick:
                        date_between:
                          start_date: 2032-01-01
                          end_date: 2032-03-31
          - choice:
              # About a half of the time, I would like to ensure the start date is the upcoming year
              probability: 50%
              pick: 
                date_between:
                      start_date: +1M
                      end_date: +13M
          - choice:
              # The remainder of the time, I'll give it more flexibility to choose other dates
              probability: 25%
              pick: 
                date_between:
                      start_date: +1M
                      end_date: +100M
    SBQQ__EndDate__c:
      random_choice:
          - choice:
              probability: 25%
              # Set "End Date" to represent a 3 year term
              pick: ${{ date(SBQQ__StartDate__c) + relativedelta(years=3) - relativedelta(days=1)}}
          - choice:
              probability: 25%
              # Set "End Date" to represent a 1 year term
              pick: ${{ date(SBQQ__StartDate__c) + relativedelta(years=1) - relativedelta(days=1)}}
          - choice:
              probability: 50%
              # Set "End Date" to any value within 5 years
              pick: 
                date_between:
                  start_date: ${{SBQQ__StartDate__c}}
                  end_date: +5y

  friends:
    - object: SBQQ__QuoteLine__c
      count:
        random_choice:
          - choice:
              probability: 50%
              pick: 1
          - choice:
              probability: 40%
              pick: 2
          - choice:
              probability: 5%
              pick: 3
          - choice:
              probability: 5%
              pick: 5
      fields:
        SBQQ__Quote__c:
          reference: SBQQ__Quote__c
        SBQQ__Product__c:
          random_choice:
            - choice:
                probability: 60%
                pick:
                  reference: subscriptionProductRecurringCharge
            - choice:
                probability: 20%
                pick:
                  reference: subscriptionProductOneTimeCharge
            - choice:
                probability: 20%
                pick:
                  reference: nonSubcriptionProduct
        SBQQ__ProductSubscriptionType__c: ${{SBQQ__Product__c.SBQQ__SubscriptionType__c}}
        SBQQ__SubscriptionType__c: ${{SBQQ__ProductSubscriptionType__c}}
        SBQQ__SubscriptionPricing__c: ${{SBQQ__Product__c.SBQQ__SubscriptionPricing__c}}
        SBQQ__DefaultSubscriptionTerm__c: 
          if:
            - choice:
                when: ${{SBQQ__SubscriptionPricing__c!=NULL}}
                pick:
                  random_choice:
                    - choice:
                        probability: 40%
                        pick: 12
                    - choice:
                        probability: 40%
                        pick: 1
                    - choice:
                        probability: 10%
                        pick: 3
                    - choice:
                        probability: 10%
                        pick: 6
        SBQQ__ChargeType__c: ${{SBQQ__Product__c.SBQQ__ChargeType__c}}
        SBQQ__BillingFrequency__c:
          if:
            - choice:
                when: ${{SBQQ__ChargeType__c=='Recurring'}}
                pick:
                  random_choice:
                    - choice:
                        probability: 60%
                        pick: Annual
                    - choice:
                        probability: 30%
                        pick: Quarterly
                    - choice:
                        probability: 10%
                        pick: Semiannual
                    - choice:
                        probability: 10%
                        pick: Monthly
            - choice:
                pick: NULL
        SBQQ__BillingType__c:
          if:
            - choice:
                when: ${{SBQQ__ChargeType__c=='Recurring'}}
                pick: Advance
            - choice:
                pick: NULL
        SBQQ__PricingMethod__c: List
        SBQQ__PricingMethodEditable__c: True
        SBQQ__ListPrice__c: 
          random_choice:
            - choice:
                probability: 1%
                pick: 0
            - choice:
                probability: 99%
                pick: 
                  random_number:
                    min: 100
                    max: 500
        SBQQ__Quantity__c: 
          random_choice:
            - choice:
                probability: 25%
                pick: 1
            - choice:
                probability: 75%
                pick: 
                  random_number:
                    min: -10
                    max: 100
        SBQQ__Optional__c:
          random_choice:
            - choice:
                probability: 5%
                pick: True
            - choice:
                probability: 95%
                pick: False
        SBQQ__PartnerDiscount__c:
          random_choice:
                - choice:
                    probability: 75%
                    pick: 0
                - choice:
                    probability: 25%
                    pick:  
                      random_number:
                        min: 5
                        max: 10
        SBQQ__DistributorDiscount__c: 
          random_choice:
                - choice:
                    probability: 75%
                    pick: 0
                - choice:
                    probability: 25%
                    pick:  
                      random_number:
                        min: 5
                        max: 10
        SBQQ__Discount__c: 
          random_choice:
                - choice:
                    probability: 75%
                    pick: 0
                - choice:
                    probability: 25%
                    pick:  
                      random_number:
                        min: 5
                        max: 20
        __productNickname: ${{SBQQ__Product__c.__nickname}}
        SBQQ__PricebookEntryId__c:
          if:
            - choice:
                when: ${{__productNickname=='subscriptionProductRecurringCharge'}}
                pick:
                  reference: subscriptionProductRecurringChargePBE
            - choice:
                when: ${{__productNickname=='subscriptionProductOneTimeCharge'}}
                pick:
                  reference: subscriptionProductOneTimeChargePBE
            - choice:
                when: ${{__productNickname=='nonSubcriptionProduct'}}
                pick:
                  reference: nonSubcriptionProductPBE
            - choice:
                pick: NULL
        SBQQ__StartDate__c:
          random_choice:
                - choice:
                    probability: 75%
                    pick: NULL
                - choice:
                    probability: 25%
                    pick:  
                      if:
                        - choice:
                            when: ${{SBQQ__Quote__c.SBQQ__EndDate__c!=NULL}}
                            pick:
                              date_between:
                                start_date: ${{ date(SBQQ__Quote__c.SBQQ__StartDate__c)}}
                                end_date: ${{ date(SBQQ__Quote__c.SBQQ__EndDate__c)}}
                        - choice:
                            when: ${{SBQQ__Quote__c.SBQQ__EndDate__c==NULL}}
                            pick:
                              date_between:
                                start_date: ${{ date(SBQQ__Quote__c.SBQQ__StartDate__c)}}
                                end_date: ${{ date(SBQQ__Quote__c.SBQQ__StartDate__c) + relativedelta(years=2)}}



        